{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/1.png","App.js","index.js","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","App.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","start","end","value","duration","separator","Date","toDateString","variant","url","fetchData","country","a","changebleURL","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","LineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","event","target","i","App","state","fetchdData","setState","this","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a32c399.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__33Yne\",\"card\":\"Cards_card__3hpQv\",\"infected\":\"Cards_infected__1gHiC\",\"recovered\":\"Cards_recovered__AdK9E\",\"deaths\":\"Cards_deaths__2IynX\",\"cards\":\"Cards_cards__3ww3s\"};","import React from \"react\";\r\nimport { Card,CardContent,Typography,Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data: { confirmed, recovered, deaths, lastUpdate }}) =>{\r\n    if (!confirmed){\r\n        return 'Loading...';\r\n    }\r\n    return(\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3} justify=\"center\">\r\n                <Grid item component={Card} xs={12} md={3} className= {cx(styles.card, styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n                        <Typography color='textPrimary'>\r\n                                <CountUp start={0} end= {confirmed.value} duration={2.5} separator=\",\" />\r\n                            </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of active cases of COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className= {cx(styles.card, styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n                        <Typography color='textPrimary'>\r\n                                <CountUp start={0} end= {recovered.value} duration={2.5} separator=\",\" />\r\n                            </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of recoveries from COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n                <Grid item component={Card} xs={12} md={3} className= {cx(styles.card, styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n                        <Typography color='textPrimary'>\r\n                                <CountUp start={0} end= {deaths.value} duration={2.5} separator=\",\" />\r\n                            </Typography>\r\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of deaths caused by COVID-19</Typography>\r\n                    </CardContent>\r\n\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async(country) => {\r\n    let changebleURL = url;\r\n\r\n    if (country) {\r\n        changebleURL = `${url}/countries/${country}`;\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changebleURL);\r\n\r\n        return { confirmed, recovered, deaths, lastUpdate, };\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async() => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`);\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n        return modifiedData;\r\n    } catch (error) {\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async() => {\r\n    try {\r\n        const { data: { countries } } = await axios.get(`${url}/countries`);\r\n        return countries.map((country) => country.name);\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","import React, {useState,useEffect} from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport {Line,Bar} from \"react-chartjs-2\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nconst Chart = ({data:{confirmed,recovered,deaths} , country}) =>{\r\n\r\n    const [dailyData,setDailyData] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async () =>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        fetchAPI();\r\n    },[]);\r\n\r\n    const LineChart = (\r\n        dailyData.length \r\n        ?\r\n        (<Line\r\n            data={{\r\n                labels: dailyData.map(({date})=>date),\r\n                datasets: [{\r\n                    data: dailyData.map(({confirmed})=> confirmed),\r\n                    label: 'Infected',\r\n                    borderColor: '#3333ff',\r\n                    fill: true,\r\n                },{\r\n        \r\n                    data: dailyData.map(({deaths})=> deaths),\r\n                    label: 'Deaths',\r\n                    borderColor: 'red',\r\n                    backgroundColor : 'rgba(255,0,0 ,0.5)',\r\n                    fill: true,\r\n                }],\r\n            }}\r\n        />):null\r\n    );\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ?(<Bar\r\n            data = {{\r\n                labels: ['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    label: 'People',\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 255, 0.5)',\r\n                        'rgba(0, 255, 0, 0.5)',\r\n                        'rgba(255, 0, 0, 0.5)',\r\n                    ],\r\n                    data: [confirmed.value,recovered.value,deaths.value]\r\n                }]\r\n            }}\r\n            options = {{\r\n                legend: {display: false},\r\n                title: {display: true, text:`Current state in ${country}`},\r\n            }}\r\n        />\r\n            ):null\r\n    )\r\n\r\n    return(\r\n        <div className={styles.container}>\r\n            {country ? barChart : LineChart}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Chart;","import React, {useState,useEffect} from \"react\";\r\nimport {NativeSelect, FormControl} from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\"\r\nimport {fetchCountries} from \"../../api\";\r\n\r\nconst CountryPicker = ({handleCountryChange}) =>{\r\n    const [fetchedCountries,setFetchedCountries] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async() => {\r\n            setFetchedCountries(await fetchCountries());\r\n        }\r\n        fetchAPI();\r\n    },[setFetchedCountries]);\r\n\r\nconsole.log(fetchedCountries);\r\n    return(\r\n        <FormControl className={styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(event) => handleCountryChange(event.target.value)}>\r\n                <option value=\"global\">Global</option>\r\n                {fetchedCountries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/1.18cac5f3.png\";","import React from 'react';\n\nimport { Chart, Cards, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport coronaImage from './images/1.png'\n\nclass App extends React.Component {\n    state = {\n        data: {},\n        country: '',\n    }\n    async componentDidMount() {\n        const fetchdData = await fetchData();\n\n        this.setState({ data: fetchdData })\n    }\n\n    handleCountryChange = async(country) => {\n        const fetchdData = await fetchData(country);\n        this.setState({ data: fetchdData, country: country })\n    }\n\n    render() {\n        const { data, country } = this.state;\n\n        return ( < div className = { styles.container } >\n            <h1>C<img className = \"styles.image\"  src = { coronaImage } alt = \"COVID-19\" / >VID-19</h1>\n            <Cards data = { data }/> \n            <CountryPicker handleCountryChange = { this.handleCountryChange }/ >\n            <Chart data = { data }country = { country }/> \n            </div > );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render( < App / > , document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3a21P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__35n1-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3VpiS\",\"image\":\"App_image__QBIDh\"};"],"sourceRoot":""}